{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setStepperSteps, setEndpoint, setBaseUrl, setEndorsement, setSealSession } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport EndorsedEBillForm from \"../../../components/endorserEBillForm\";\n\nclass AuthorizeEbill extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"submit\", values => {\n      // console.log(\"authorize-ebill values\")\n      // console.log(values);\n      // console.log(`the session is ${this.props.sealSession}`)\n      let verificationId = values.verification; // console.log(``)\n      // values.source = \"ebill\";\n      // let toSelect = [values];\n      // this.props.setSefToSelection(toSelect);\n\n      let uri = `/endorse/ebill/authorization?verification=${verificationId}&session=${this.props.sealSession}`;\n      axios.get(uri).then(data => {\n        this.setState({\n          vcSent: true\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: true\n        });\n      });\n    });\n\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.ebill !== undefined;\n    this.state = {\n      error: null,\n      vcSent: false\n    };\n  }\n\n  static async getInitialProps({\n    reduxStore,\n    req\n  }) {\n    let endorsement;\n    let sealSession;\n\n    if (true) {\n      endorsement = req.session.endorsement;\n      reduxStore.dispatch(setEndorsement(req.session.endorsement));\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      sealSession = req.session.sessionId;\n      reduxStore.dispatch(setSealSession(sealSession));\n    } else {\n      endorsement = reduxStore.getState().endorsement;\n      sealSession = reduxStore.getState().sealSession;\n    } //this way the userSessionData gets set in all settings\n\n\n    if (endorsement) {\n      reduxStore.dispatch(setEndorsement(endorsement));\n    } //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n\n\n    return {\n      endorsement: endorsement,\n      sealSession: reduxStore.getState().sealSession // error: null,\n\n    };\n  } // componentDidMount() {\n  //   if (!this.props.DID) {\n  //     //if DID auth has not been completed\n  //     if (!this.props.sealSession) {\n  //       this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n  //     } else {\n  //       this.props.makeConnectionRequest(\n  //         this.props.sealSession,\n  //         this.props.baseUrl,\n  //         isMobile()\n  //       );\n  //     }\n  //   }\n  // }\n\n\n  render() {\n    let stepNumber = 0;\n    let stepperSteps = [{\n      title: \"Επιβεβαιώστε τα κάτωθι στοιχεία\"\n    } // { title: \"Declare Self Attested Attributes\" },\n    ];\n\n    let issueVCBut = __jsx(IssueVCButton, {\n      hasRequiredAttributes: this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.ebill !== undefined,\n      baseUrl: this.props.baseUrl,\n      userSelection: this.props.userSelection,\n      uuid: this.props.sealSession,\n      vcType: \"EBILL\"\n    });\n\n    let theCard = __jsx(Card, {\n      className: \"text-center\",\n      style: {\n        marginTop: \"2rem\"\n      }\n    }, __jsx(Card.Header, null, \"\\u0395\\u03C0\\u03B9\\u03B2\\u03B1\\u03B9\\u03B2\\u03AD\\u03C9\\u03C3\\u03B7 \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03B3\\u03B9\\u03B1 \\u03AD\\u03BA\\u03B4\\u03BF\\u03C3\\u03B7 \\u03A0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03C4\\u03B9\\u03BA\\u03BF\\u03CD\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"\\u039F\\u03BB\\u03BF\\u03BA\\u03BB\\u03B7\\u03C1\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5 \\u03C4\\u03B7\\u03BD \\u03B1\\u03AF\\u03C4\\u03B7\\u03C3\\u03B7 \\u03B5\\u03C0\\u03B9\\u03B2\\u03B1\\u03B9\\u03B2\\u03AD\\u03C9\\u03C3\\u03B7\\u03C2 \\u03C4\\u03C9\\u03BD \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03C0\\u03BF\\u03C5 \\u03B4\\u03B7\\u03BB\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5. \\u039C\\u03CC\\u03BB\\u03B9\\u03C2, \\u03C4\\u03B1 \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03B1 \\u03B5\\u03C0\\u03B9\\u03B2\\u03B5\\u03B2\\u03B1\\u03B9\\u03C9\\u03B8\\u03BF\\u03CD\\u03BD \\u03B1\\u03C0\\u03CC \\u03C4\\u03BF\\u03BD \\u03B1\\u03C1\\u03BC\\u03CC\\u03B4\\u03B9\\u03BF \\u03C6\\u03BF\\u03C1\\u03AD\\u03B1, \\u03CC\\u03C0\\u03C9\\u03C2 \\u03B5\\u03C3\\u03B5\\u03AF\\u03C2 \\u03C4\\u03BF\\u03BD \\u03B4\\u03B7\\u03BB\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5, \\u03C4\\u03BF \\u03B1\\u03BD\\u03C4\\u03AF\\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03BF \\u03C0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03C4\\u03B9\\u03BA\\u03CC (Verifiable Credential) \\u03B8\\u03B1 \\u03C3\\u03C4\\u03B1\\u03BB\\u03B5\\u03AF \\u03C3\\u03C4\\u03BF \\u03BA\\u03B9\\u03BD\\u03B7\\u03C4\\u03CC \\u03C3\\u03B1\\u03C2.\"), __jsx(Container, null)));\n\n    let result = this.state.error ? __jsx(\"div\", {\n      style: {\n        marginTop: \"3rem\"\n      }\n    }, \"\\u0397 \\u03C5\\u03C0\\u03B5\\u03CD\\u03B8\\u03C5\\u03BD\\u03B7 \\u03B4\\u03AE\\u03BB\\u03C9\\u03C3\\u03B7 \\u03C0\\u03BF\\u03C5 \\u03C0\\u03B1\\u03C1\\u03B5\\u03AF\\u03C7\\u03B1\\u03C4\\u03B5 \\u03B4\\u03B5\\u03BD \\u03C0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B5\\u03AF \\u03C4\\u03B9\\u03C2 \\u03B6\\u03B7\\u03C4\\u03BF\\u03CD\\u03BC\\u03B5\\u03BD\\u03B5\\u03C2 \\u03B4\\u03B9\\u03B1\\u03C0\\u03B9\\u03C3\\u03C4\\u03B5\\u03CD\\u03C3\\u03B5\\u03B9\\u03C2\") : this.state.vcSent ? __jsx(\"div\", {\n      style: {\n        marginTop: \"3rem\"\n      }\n    }, \"\\u03A4\\u03BF \\u03B4\\u03B9\\u03B1\\u03C0\\u03B9\\u03C3\\u03C4\\u03B5\\u03C5\\u03C4\\u03AE\\u03C1\\u03B9\\u03BF\\u03BD \\u03AD\\u03C7\\u03B5\\u03B9 \\u03B1\\u03C0\\u03BF\\u03C3\\u03C4\\u03B1\\u03BB\\u03B5\\u03AF \\u03C3\\u03C4\\u03BF \\u03BA\\u03B9\\u03BD\\u03B7\\u03C4\\u03CC \\u03C4\\u03BF\\u03C5 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7 \\u03BC\\u03B5 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C5\\u03C7\\u03AF\\u03B1\") : __jsx(PairOrCard, {\n      qrData: this.props.qrData,\n      DID: this.props.DID,\n      baseUrl: this.props.baseUrl,\n      uuid: this.props.uuid,\n      serverSessionId: this.props.sealSession,\n      card: theCard,\n      vcSent: this.props.vcSent,\n      sealSession: this.props.sealSession,\n      formDataUploaded: this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.ebill !== undefined,\n      selfForm: __jsx(EndorsedEBillForm, {\n        onSubmit: this.submit,\n        endorsed: this.props.endorsement\n      })\n    });\n    return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n      steps: stepperSteps,\n      activeNum: stepNumber\n    }))), result, __jsx(Row, null, __jsx(HomeButton, {\n      baseUrl: this.props.baseUrl\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sessionData: state.appReducer.sessionData,\n    DID: true,\n    sealSession: state.appReducer.sealSession\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSteps: steps => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: endpont => {\n      dispatch(setEndpoint(endpoint));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizeEbill);","map":{"version":3,"sources":["/home/ni/code/js/sbchain-issuer/pages/endorse/issue/authorize-ebill.js"],"names":["React","axios","setStepperSteps","setEndpoint","setBaseUrl","setEndorsement","setSealSession","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","EndorsedEBillForm","AuthorizeEbill","Component","constructor","props","values","verificationId","verification","uri","sealSession","get","then","data","setState","vcSent","catch","error","console","log","dispatch","isFetching","sessionData","hasRequiredAttributes","undefined","ebill","state","getInitialProps","reduxStore","req","endorsement","session","enpoint","baseUrl","sessionId","getState","render","stepNumber","stepperSteps","title","issueVCBut","userSelection","theCard","marginTop","result","qrData","DID","uuid","submit","mapStateToProps","appReducer","mapDispatchToProps","setSteps","steps","setEndPoint","endpont","endpoint"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,eADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,cALF,QAMO,gBANP;AAOA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;AAEA,MAAMC,cAAN,SAA6BnB,KAAK,CAACoB,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,oCA0DTC,MAAD,IAAY;AACnB;AACA;AACA;AACA,UAAIC,cAAc,GAAGD,MAAM,CAACE,YAA5B,CAJmB,CAKnB;AACA;AACA;AACA;;AACA,UAAIC,GAAG,GAAI,6CAA4CF,cAAe,YAAW,KAAKF,KAAL,CAAWK,WAAY,EAAxG;AACA1B,MAAAA,KAAK,CACF2B,GADH,CACOF,GADP,EAEGG,IAFH,CAESC,IAAD,IAAU;AACb,aAAKC,QAAL,CAAc;AACbC,UAAAA,MAAM,EAAC;AADM,SAAd;AAGF,OANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAKH,QAAL,CAAc;AACZG,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAZH;AAaD,KAjFkB;;AAEjB,SAAKG,QAAL,GAAgBf,KAAK,CAACe,QAAtB;AACA,SAAKC,UAAL,GAAkBhB,KAAK,CAACgB,UAAxB;AACA,SAAKC,WAAL,GAAmBjB,KAAK,CAACiB,WAAzB;AACA,SAAKC,qBAAL,GACElB,KAAK,CAACiB,WAAN,KAAsB,IAAtB,IACAjB,KAAK,CAACiB,WAAN,KAAsBE,SADtB,IAEAnB,KAAK,CAACiB,WAAN,CAAkBG,KAAlB,KAA4BD,SAH9B;AAKA,SAAKE,KAAL,GAAa;AAAET,MAAAA,KAAK,EAAE,IAAT;AAAeF,MAAAA,MAAM,EAAC;AAAtB,KAAb;AACD;;AAED,eAAaY,eAAb,CAA6B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA7B,EAAkD;AAChD,QAAIC,WAAJ;AACA,QAAIpB,WAAJ;;AACA,cAAmC;AACjCoB,MAAAA,WAAW,GAAGD,GAAG,CAACE,OAAJ,CAAYD,WAA1B;AACAF,MAAAA,UAAU,CAACR,QAAX,CAAoBhC,cAAc,CAACyC,GAAG,CAACE,OAAJ,CAAYD,WAAb,CAAlC;AACAF,MAAAA,UAAU,CAACR,QAAX,CAAoBlC,WAAW,CAAC2C,GAAG,CAACE,OAAJ,CAAYC,OAAb,CAA/B;AACA,UAAIC,OAAO,GAAGJ,GAAG,CAACE,OAAJ,CAAYE,OAAZ,GAAuB,IAAGJ,GAAG,CAACE,OAAJ,CAAYE,OAAQ,GAA9C,GAAmD,EAAjE;AACAL,MAAAA,UAAU,CAACR,QAAX,CAAoBjC,UAAU,CAAC8C,OAAD,CAA9B;AACAvB,MAAAA,WAAW,GAAGmB,GAAG,CAACE,OAAJ,CAAYG,SAA1B;AACAN,MAAAA,UAAU,CAACR,QAAX,CAAoB/B,cAAc,CAACqB,WAAD,CAAlC;AACD,KARD,MAQO;AACLoB,MAAAA,WAAW,GAAGF,UAAU,CAACO,QAAX,GAAsBL,WAApC;AACApB,MAAAA,WAAW,GAAGkB,UAAU,CAACO,QAAX,GAAsBzB,WAApC;AACD,KAd+C,CAgBhD;;;AACA,QAAIoB,WAAJ,EAAiB;AACfF,MAAAA,UAAU,CAACR,QAAX,CAAoBhC,cAAc,CAAC0C,WAAD,CAAlC;AACD,KAnB+C,CAqBhD;AACA;;;AACA,WAAO;AACLA,MAAAA,WAAW,EAAEA,WADR;AAELpB,MAAAA,WAAW,EAAEkB,UAAU,CAACO,QAAX,GAAsBzB,WAF9B,CAGL;;AAHK,KAAP;AAKD,GA1C0C,CA4C3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA2BA0B,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,YAAY,GAAG,CACjB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADiB,CAEjB;AAFiB,KAAnB;;AAKA,QAAIC,UAAU,GACZ,MAAC,aAAD;AACE,MAAA,qBAAqB,EACnB,KAAKnC,KAAL,CAAWiB,WAAX,KAA2B,IAA3B,IACA,KAAKjB,KAAL,CAAWiB,WAAX,KAA2BE,SAD3B,IAEA,KAAKnB,KAAL,CAAWiB,WAAX,CAAuBG,KAAvB,KAAiCD,SAJrC;AAME,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAW4B,OANtB;AAOE,MAAA,aAAa,EAAE,KAAK5B,KAAL,CAAWoC,aAP5B;AAQE,MAAA,IAAI,EAAE,KAAKpC,KAAL,CAAWK,WARnB;AASE,MAAA,MAAM,EAAE;AATV,MADF;;AAcA,QAAIgC,OAAO,GACT,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAArC,OACE,MAAC,IAAD,CAAM,MAAN,iRADF,EAIE,MAAC,IAAD,CAAM,IAAN,QACE,MAAC,IAAD,CAAM,KAAN,QACG,KAAKpB,qBAAL,GACG,gCADH,GAEG,kDAHN,CADF,EAME,MAAC,IAAD,CAAM,IAAN,6iCANF,EAYE,MAAC,SAAD,OAZF,CAJF,CADF;;AA0BA,QAAIqB,MAAM,GAAG,KAAKlB,KAAL,CAAWT,KAAX,GACX;AAAK,MAAA,KAAK,EAAE;AAAC0B,QAAAA,SAAS,EAAC;AAAX;AAAZ,+ZADW,GAMX,KAAKjB,KAAL,CAAWX,MAAX,GACE;AAAK,MAAA,KAAK,EAAE;AAAC4B,QAAAA,SAAS,EAAC;AAAX;AAAZ,+WADF,GAOA,MAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKtC,KAAL,CAAWwC,MADrB;AAEE,MAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWyC,GAFlB;AAGE,MAAA,OAAO,EAAE,KAAKzC,KAAL,CAAW4B,OAHtB;AAIE,MAAA,IAAI,EAAE,KAAK5B,KAAL,CAAW0C,IAJnB;AAKE,MAAA,eAAe,EAAE,KAAK1C,KAAL,CAAWK,WAL9B;AAME,MAAA,IAAI,EAAEgC,OANR;AAOE,MAAA,MAAM,EAAE,KAAKrC,KAAL,CAAWU,MAPrB;AAQE,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWK,WAR1B;AASE,MAAA,gBAAgB,EACd,KAAKL,KAAL,CAAWiB,WAAX,KAA2B,IAA3B,IACA,KAAKjB,KAAL,CAAWiB,WAAX,KAA2BE,SAD3B,IAEA,KAAKnB,KAAL,CAAWiB,WAAX,CAAuBG,KAAvB,KAAiCD,SAZrC;AAcE,MAAA,QAAQ,EACN,MAAC,iBAAD;AACE,QAAA,QAAQ,EAAE,KAAKwB,MADjB;AAEE,QAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWyB;AAFvB;AAfJ,MAbF;AAoCA,WACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,GAAD,QACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAEQ,YAAlB;AAAgC,MAAA,SAAS,EAAED;AAA3C,MADF,CADF,CADF,EAMGO,MANH,EAQE,MAAC,GAAD,QACE,MAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKvC,KAAL,CAAW4B;AAAhC,MADF,CARF,CADF;AAcD;;AArL0C;;AAuL7C,SAASgB,eAAT,CAAyBvB,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,WAAW,EAAEI,KAAK,CAACwB,UAAN,CAAiB5B,WADzB;AAELwB,IAAAA,GAAG,EAAE,IAFA;AAGLpC,IAAAA,WAAW,EAAEgB,KAAK,CAACwB,UAAN,CAAiBxC;AAHzB,GAAP;AAKD;;AAED,MAAMyC,kBAAkB,GAAI/B,QAAD,IAAc;AACvC,SAAO;AACLgC,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBjC,MAAAA,QAAQ,CAACnC,eAAe,CAACoE,KAAD,CAAhB,CAAR;AACD,KAHI;AAILC,IAAAA,WAAW,EAAGC,OAAD,IAAa;AACxBnC,MAAAA,QAAQ,CAAClC,WAAW,CAACsE,QAAD,CAAZ,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAejE,OAAO,CAAC0D,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjD,cAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport {\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  setEndorsement,\n  setSealSession,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport EndorsedEBillForm from \"../../../components/endorserEBillForm\";\n\nclass AuthorizeEbill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.ebill !== undefined;\n\n    this.state = { error: null, vcSent:false };\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let endorsement;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      endorsement = req.session.endorsement;\n      reduxStore.dispatch(setEndorsement(req.session.endorsement));\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      sealSession = req.session.sessionId;\n      reduxStore.dispatch(setSealSession(sealSession));\n    } else {\n      endorsement = reduxStore.getState().endorsement;\n      sealSession = reduxStore.getState().sealSession;\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (endorsement) {\n      reduxStore.dispatch(setEndorsement(endorsement));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      endorsement: endorsement,\n      sealSession: reduxStore.getState().sealSession,\n      // error: null,\n    };\n  }\n\n  // componentDidMount() {\n  //   if (!this.props.DID) {\n  //     //if DID auth has not been completed\n  //     if (!this.props.sealSession) {\n  //       this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n  //     } else {\n  //       this.props.makeConnectionRequest(\n  //         this.props.sealSession,\n  //         this.props.baseUrl,\n  //         isMobile()\n  //       );\n  //     }\n  //   }\n  // }\n\n  submit = (values) => {\n    // console.log(\"authorize-ebill values\")\n    // console.log(values);\n    // console.log(`the session is ${this.props.sealSession}`)\n    let verificationId = values.verification;\n    // console.log(``)\n    // values.source = \"ebill\";\n    // let toSelect = [values];\n    // this.props.setSefToSelection(toSelect);\n    let uri = `/endorse/ebill/authorization?verification=${verificationId}&session=${this.props.sealSession}`;\n    axios\n      .get(uri)\n      .then((data) => {\n         this.setState({\n          vcSent:true\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          error: true,\n        });\n      });\n  };\n\n  render() {\n    let stepNumber = 0;\n    let stepperSteps = [\n      { title: \"Επιβεβαιώστε τα κάτωθι στοιχεία\" },\n      // { title: \"Declare Self Attested Attributes\" },\n    ];\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={\n          this.props.sessionData !== null &&\n          this.props.sessionData !== undefined &&\n          this.props.sessionData.ebill !== undefined\n        }\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"EBILL\"}\n      />\n    );\n\n    let theCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Επιβαιβέωση στοιχείων για έκδοση Πιστοποιητικού\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Ολοκληρώσατε την αίτηση επιβαιβέωσης των στοιχείων που δηλώσατε.\n            Μόλις, τα στοιχεία επιβεβαιωθούν από τον αρμόδιο φορέα, όπως εσείς\n            τον δηλώσατε, το αντίστοιχο πιστοποιητικό (Verifiable Credential) θα\n            σταλεί στο κινητό σας.\n          </Card.Text>\n          <Container>\n            {/* <Row>\n              <Col>{issueVCBut}</Col>\n            </Row> */}\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n\n    let result = this.state.error ? (\n      <div style={{marginTop:\"3rem\"}}>\n        Η υπεύθυνη δήλωση που παρείχατε δεν πιστοποιεί τις ζητούμενες\n        διαπιστεύσεις\n      </div>\n    ) : \n      this.state.vcSent? (\n        <div style={{marginTop:\"3rem\"}}>\n          Το διαπιστευτήριον έχει αποσταλεί στο κινητό του χρήστη με επιτυχία\n        </div>\n      ):\n    \n    (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.sealSession}\n        card={theCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        formDataUploaded={\n          this.props.sessionData !== null &&\n          this.props.sessionData !== undefined &&\n          this.props.sessionData.ebill !== undefined\n        }\n        selfForm={\n          <EndorsedEBillForm\n            onSubmit={this.submit}\n            endorsed={this.props.endorsement}\n          />\n        }\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    sessionData: state.appReducer.sessionData,\n    DID: true,\n    sealSession: state.appReducer.sealSession,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizeEbill);\n"]},"metadata":{},"sourceType":"module"}