{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl // setServerSessionId,\n, completeDIDAuth, makeSealSession, makeSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport AadeForm from \"../../../components/AadeForm\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\n\nvar transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\n\nvar IssueE1 = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueE1, _React$Component);\n\n  var _super = _createSuper(IssueE1);\n\n  function IssueE1(props) {\n    var _this;\n\n    _classCallCheck(this, IssueE1);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (values) {\n      // print the form values to the console\n      // alert(values);\n      console.log(values);\n      var sessionFrag = _this.props.sealSession ? \"?session=\".concat(_this.props.sealSession, \"&name=\").concat(values.name, \"&surname=\").concat(values.surname, \"&dateOfBirth=\").concat(encodeURI(values.dateOfBirth)) : \"\";\n      window.location.href = \"\".concat(_this.props.baseUrl, \"/e1/getData\").concat(sessionFrag);\n    });\n\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithTaxisAuth = _this.proceedWithTaxisAuth.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.e1 !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueE1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.e1) {\n        var toSelect = [this.props.sessionData.e1];\n        this.props.setE1ToSelection(toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        if (!this.props.sealSession) {\n          this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n        } else {\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, isMobile());\n        }\n      }\n    }\n  }, {\n    key: \"proceedWithTaxisAuth\",\n    value: function proceedWithTaxisAuth() {\n      var sessionFrag = this.props.sealSession ? \"?session=\".concat(this.props.sealSession) : \"\";\n      window.location.href = this.props.baseUrl === \"\" ? \"/e1/getData\".concat(sessionFrag) : \"\".concat(this.props.baseUrl, \"e1/getData\").concat(sessionFrag);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Συνδέστε το κινητό σας\"\n      }, {\n        title: 'Ανακτήστε τα δεδομένα σας'\n      }, {\n        title: \"Έκδοση Ηλεκτρονικής Ταυτότητας\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.uuid,\n          sealSession: this.props.uuid\n        }));\n      }\n\n      var aadeLoginButton = !this.hasRequiredAttributes ? __jsx(Button, {\n        onClick: this.proceedWithTaxisAuth\n      }, \"\\u03A3\\u03CD\\u03BD\\u03B4\\u03B5\\u03C3\\u03B7 \\u03BC\\u03AD\\u03C3\\u03C9 \\u0391\\u0391\\u0394\\u0395\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true\n      }, \"AADE login\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        ,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"E1\"\n      });\n\n      var eidasCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue a Verifiable Credential containing financial details from AADE\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Η έκδοση της Ηλεκτρονικής σας Ταυτότητας είναι έτοιμη!\" : \"Παρακαλώ ταυτοποιηθείτε στις απαιτούμενες πηγές\"), __jsx(Card.Text, null, \"\\u039C\\u03BF\\u03BB\\u03B9\\u03C2 \\u03C4\\u03B1\\u03C5\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03B8\\u03B5\\u03AF\\u03C4\\u03B5 \\u03BC\\u03B5 \\u03C4\\u03B9\\u03C2 \\u03B5\\u03BE\\u03BF\\u03C5\\u03C3\\u03B9\\u03BF\\u03B4\\u03BF\\u03C4\\u03B7\\u03BC\\u03AD\\u03BD\\u03B5\\u03C2 \\u03C0\\u03B7\\u03B3\\u03AD\\u03C2, \\u03C0\\u03B1\\u03C4\\u03AE\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF \\u03BA\\u03BF\\u03C5\\u03BC\\u03C0\\u03AF \\\"\\u0388\\u03BA\\u03B4\\u03BF\\u03C3\\u03B7\\\" \\u03B3\\u03B9\\u03B1 \\u03BD\\u03B1 \\u03B4\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03AE\\u03C3\\u03B5\\u03C4\\u03B5 \\u03C4\\u03B7\\u03BD \\u03C4\\u03B1\\u03C5\\u03C4\\u03BF\\u03C4\\u03B7\\u03C4\\u03AC \\u03C3\\u03B1\\u03C2.\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, aadeLoginButton), __jsx(Col, null, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.sealSession,\n        card: eidasCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        selfForm: __jsx(AadeForm, {\n          onSubmit: this.submit,\n          userError: this.props.noUserError\n        }),\n        formDataUploaded: this.hasRequiredAttributes\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"e1.js:: in the server the seal session is:: \".concat(req.session.sealSession));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  noUserError: req ? req.session.error : null,\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueE1;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setE1ToSelection: function setE1ToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: function startSessionAndDidAuth(baseUrl, isMobile) {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueE1);","map":{"version":3,"sources":["/home/ni/code/js/sbchain-issuer/pages/vc/issue/e1.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","completeDIDAuth","makeSealSession","makeSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","isMobile","AadeForm","ConnectMobile","transport","require","IssueE1","props","values","console","log","sessionFrag","sealSession","name","surname","encodeURI","dateOfBirth","window","location","href","baseUrl","dispatch","isFetching","sessionData","proceedWithTaxisAuth","bind","hasRequiredAttributes","undefined","e1","toSelect","setE1ToSelection","DID","startSessionAndDidAuth","makeConnectionRequest","stepNumber","stepperSteps","title","qrData","uuid","aadeLoginButton","issueVCBut","userSelection","eidasCard","marginTop","result","vcSent","submit","noUserError","reduxStore","req","userSessionData","session","userData","enpoint","DIDOk","getState","error","Component","mapStateToProps","state","appReducer","fetching","eidasUri","eidasPort","endpoint","eidasRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","didAuthOK","startSealSession","setTheSealSession","sessionId","setEidas","uri","data","setEidasRedirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  // setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport AadeForm from \"../../../components/AadeForm\";\nimport ConnectMobile from \"../../../components/ConnectMobile\"\n\nconst transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueE1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithTaxisAuth = this.proceedWithTaxisAuth.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.e1 !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `e1.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      noUserError:  req?req.session.error:null,\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.e1) {\n      let toSelect = [this.props.sessionData.e1];\n      this.props.setE1ToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      if (!this.props.sealSession) {\n        this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n      } else {\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          isMobile()\n        );\n      }\n    }\n  }\n\n  submit = (values) => {\n    // print the form values to the console\n    // alert(values);\n    console.log(values);\n    let sessionFrag = this.props.sealSession\n      ? `?session=${this.props.sealSession}&name=${values.name}&surname=${\n          values.surname\n        }&dateOfBirth=${encodeURI(values.dateOfBirth)}`\n      : \"\";\n    window.location.href = `${this.props.baseUrl}/e1/getData${sessionFrag}`;\n  };\n\n  proceedWithTaxisAuth() {\n    let sessionFrag = this.props.sealSession\n      ? `?session=${this.props.sealSession}`\n      : \"\";\n    window.location.href = (this.props.baseUrl === \"\")? `/e1/getData${sessionFrag}`  : `${this.props.baseUrl}e1/getData${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Συνδέστε το κινητό σας\" },\n      { title: 'Ανακτήστε τα δεδομένα σας' },\n      { title: \"Έκδοση Ηλεκτρονικής Ταυτότητας\" },\n    ];\n\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.uuid}\n            sealSession={this.props.uuid}\n          />\n        </Layout>\n      );\n    }\n\n    let aadeLoginButton = !this.hasRequiredAttributes ? (\n      <Button onClick={this.proceedWithTaxisAuth}>Σύνδεση μέσω ΑΑΔΕ</Button>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        AADE login\n      </Button>\n    );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"E1\"}\n      />\n    );\n\n    let eidasCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a Verifiable Credential containing financial details from AADE\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Η έκδοση της Ηλεκτρονικής σας Ταυτότητας είναι έτοιμη!\"\n              : \"Παρακαλώ ταυτοποιηθείτε στις απαιτούμενες πηγές\"}\n          </Card.Title>\n          <Card.Text>\n          Μολις ταυτοποιηθείτε με τις εξουσιοδοτημένες πηγές, πατήστε το κουμπί \"Έκδοση\" για να δημιουργήσετε την ταυτοτητά σας.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{aadeLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.sealSession}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        selfForm={<AadeForm onSubmit={this.submit} userError={this.props.noUserError}/>}\n        formDataUploaded={this.hasRequiredAttributes}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setE1ToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: (baseUrl, isMobile) => {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueE1);\n"]},"metadata":{},"sourceType":"module"}