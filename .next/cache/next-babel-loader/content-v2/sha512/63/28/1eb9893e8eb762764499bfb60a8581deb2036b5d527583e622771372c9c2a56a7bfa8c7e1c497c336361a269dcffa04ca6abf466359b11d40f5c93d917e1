{"ast":null,"code":"import _regeneratorRuntime from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/ni/code/js/sbchain-issuer/pages/vc/issue/taxis.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl // setServerSessionId,\n, completeDIDAuth, makeSealSession, makeSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\n\nvar transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\n\nvar IssueAmka = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueAmka, _React$Component);\n\n  var _super = _createSuper(IssueAmka);\n\n  function IssueAmka(props) {\n    var _this;\n\n    _classCallCheck(this, IssueAmka);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.proceedWithTaxisAuth = _this.proceedWithTaxisAuth.bind(_assertThisInitialized(_this));\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.taxis !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueAmka, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.sessionData && this.props.sessionData.taxis) {\n        var toSelect = [this.props.sessionData.taxis];\n        this.props.setTaxisToSelection(toSelect);\n      }\n\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        if (!this.props.sealSession) {\n          console.log(\"Component did mount isMobile \".concat(isMobile()));\n          this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n        } else {\n          console.log(\"Component did\\u039Count no DID isMobile \".concat(isMobile()));\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, isMobile());\n        }\n      }\n    }\n  }, {\n    key: \"proceedWithTaxisAuth\",\n    value: function proceedWithTaxisAuth() {\n      var sessionFrag = this.props.sealSession ? \"?session=\".concat(this.props.sealSession) : '';\n      window.location.href = this.props.baseUrl ? \"\".concat(this.props.baseUrl, \"taxis/taxis-authenticate\").concat(sessionFrag) : \"\".concat(this.props.baseUrl, \"/taxis/taxis-authenticate\").concat(sessionFrag);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Συνδέστε το κινητό σας\"\n      }, {\n        title: 'Ταυτοποιηθείτε μέσω TaxisNet'\n      }, {\n        title: \"Έκδοση Ηλεκτρονικής Ταυτότητας\"\n      }];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        }, __jsx(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        }, __jsx(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.uuid,\n          sealSession: this.props.uuid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      var amkaLoginButton = !this.hasRequiredAttributes ? __jsx(Button, {\n        onClick: this.proceedWithTaxisAuth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, \"TAXIS\") : __jsx(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      }, \"TAXIS\");\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.hasRequiredAttributes // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        ,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"TAXIS\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      });\n\n      var eidasCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"\\u0394\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03B5\\u03AF\\u03C3\\u03C4\\u03B5 \\u03BC\\u03B9\\u03B1 \\u03B7\\u03BB\\u03B5\\u03BA\\u03C4\\u03C1\\u03BF\\u03BD\\u03B9\\u03BA\\u03AE \\u03C4\\u03B1\\u03C5\\u03C4\\u03CC\\u03C4\\u03B7\\u03C4\\u03B1 \\u03BC\\u03B5 \\u03C4\\u03B9\\u03C2 \\u03C0\\u03BB\\u03B7\\u03C1\\u03BF\\u03C6\\u03BF\\u03C1\\u03AF\\u03B5\\u03C2 \\u03C3\\u03B1\\u03C2 \\u03B1\\u03C0\\u03CC \\u03C4\\u03BF TAXIS\"), __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, __jsx(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, this.hasRequiredAttributes ? \"Η έκδοση της Ηλεκτρονικής σας Ταυτότητας είναι έτοιμη!\" : \"Παρακαλώ ταυτοποιηθείτε στις απαιτούμενες υπηρεσίες\"), __jsx(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, \"\\u039C\\u03BF\\u03BB\\u03B9\\u03C2 \\u03C4\\u03B1\\u03C5\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03B8\\u03B5\\u03AF\\u03C4\\u03B5 \\u03B1\\u03C0\\u03CC \\u03C4\\u03BF Taxis, \\u03C0\\u03B1\\u03C4\\u03AE\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF \\u03BA\\u03BF\\u03C5\\u03BC\\u03C0\\u03AF \\\"\\u0388\\u03BA\\u03B4\\u03BF\\u03C3\\u03B7\\\" \\u03B3\\u03B9\\u03B1 \\u03BD\\u03B1 \\u03B4\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03AE\\u03C3\\u03B5\\u03C4\\u03B5 \\u03C4\\u03B7\\u03BD \\u03C4\\u03B1\\u03C5\\u03C4\\u03BF\\u03C4\\u03B7\\u03C4\\u03AC \\u03C3\\u03B1\\u03C2.\"), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }, amkaLoginButton), __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, issueVCBut)))));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.uuid,\n        card: eidasCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.uuid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }\n      });\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, __jsx(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }))), result, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl));\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"taxis.js:: in the server the seal session is:: \".concat(req.session.sealSession));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueAmka;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setTaxisToSelection: function setTaxisToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: function startSessionAndDidAuth(baseUrl, isMobile) {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: function setEidas(uri, data) {\n      dispatch(setEidasUriPort(uri, data));\n    },\n    setEidasRedirect: function setEidasRedirect(uri) {\n      dispatch(setEidasRedirectUri(uri));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueAmka);","map":{"version":3,"sources":["/home/ni/code/js/sbchain-issuer/pages/vc/issue/taxis.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","completeDIDAuth","makeSealSession","makeSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","isMobile","ConnectMobile","transport","require","IssueAmka","props","dispatch","isFetching","sessionData","proceedWithTaxisAuth","bind","hasRequiredAttributes","undefined","taxis","toSelect","setTaxisToSelection","DID","sealSession","console","log","startSessionAndDidAuth","baseUrl","makeConnectionRequest","sessionFrag","window","location","href","stepNumber","stepperSteps","title","qrData","uuid","amkaLoginButton","issueVCBut","userSelection","eidasCard","marginTop","result","vcSent","reduxStore","req","userSessionData","session","userData","enpoint","DIDOk","getState","Component","mapStateToProps","state","appReducer","fetching","eidasUri","eidasPort","endpoint","eidasRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","didAuthOK","startSealSession","setTheSealSession","sessionId","setEidas","uri","data","setEidasRedirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  // setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport ConnectMobile from \"../../../components/ConnectMobile\"\n\nconst transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueAmka extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.proceedWithTaxisAuth = this.proceedWithTaxisAuth.bind(this);\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.taxis !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n\n      console.log(\n        `taxis.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sessionData && this.props.sessionData.taxis) {\n      let toSelect = [this.props.sessionData.taxis];\n      this.props.setTaxisToSelection(toSelect);\n    }\n\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      if (!this.props.sealSession) {\n        console.log(`Component did mount isMobile ${isMobile()}`);\n        this.props.startSessionAndDidAuth(\n          this.props.baseUrl,\n          isMobile()\n        ); //and then makeConnectionRequest\n      } else {\n        console.log(`Component didΜount no DID isMobile ${isMobile()}`);\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          isMobile()\n        );\n      }\n    }\n  }\n\n \n  proceedWithTaxisAuth() {\n    let sessionFrag = this.props.sealSession?`?session=${this.props.sealSession}`:'';\n    window.location.href = this.props.baseUrl?`${this.props.baseUrl}taxis/taxis-authenticate${sessionFrag}`:`${this.props.baseUrl}/taxis/taxis-authenticate${sessionFrag}`;\n  }\n\n  render() {\n    let stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Συνδέστε το κινητό σας\" },\n      { title: 'Ταυτοποιηθείτε μέσω TaxisNet' },\n      { title: \"Έκδοση Ηλεκτρονικής Ταυτότητας\" },\n    ];\n\n\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.uuid}\n            sealSession={this.props.uuid}\n          />\n        </Layout>\n      );\n\n     \n    }\n\n    let amkaLoginButton = !this.hasRequiredAttributes ? (\n      <Button onClick={this.proceedWithTaxisAuth}>TAXIS</Button>\n    ) : (\n      <Button variant=\"primary\" disabled>\n        TAXIS\n      </Button>\n    );\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={this.hasRequiredAttributes}\n        // vcIssuanceEndpoint={\"/issueVCSecure\"}\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"TAXIS\"}\n      />\n    );\n\n    let eidasCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n          <Card.Header>Δημιουργείστε μια ηλεκτρονική ταυτότητα\n            με τις πληροφορίες σας από το TAXIS</Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n               ? \"Η έκδοση της Ηλεκτρονικής σας Ταυτότητας είναι έτοιμη!\"\n               : \"Παρακαλώ ταυτοποιηθείτε στις απαιτούμενες υπηρεσίες\"}\n          </Card.Title>\n          <Card.Text>\n            Μολις ταυτοποιηθείτε από το Taxis, πατήστε το κουμπί \"Έκδοση\" για να δημιουργήσετε την ταυτοτητά σας.\n          </Card.Text>\n          <Container>\n            <Row>\n              <Col>{amkaLoginButton}</Col>\n              <Col>{issueVCBut}</Col>\n            </Row>\n          </Container>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n    );\n   \n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.uuid}\n        card={eidasCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.uuid}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setTaxisToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: (baseUrl, isMobile) => {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n    setEidas: (uri, data) => {\n      dispatch(setEidasUriPort(uri, data));\n    },\n\n    setEidasRedirect: (uri) => {\n      dispatch(setEidasRedirectUri(uri));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueAmka);\n"]},"metadata":{},"sourceType":"module"}