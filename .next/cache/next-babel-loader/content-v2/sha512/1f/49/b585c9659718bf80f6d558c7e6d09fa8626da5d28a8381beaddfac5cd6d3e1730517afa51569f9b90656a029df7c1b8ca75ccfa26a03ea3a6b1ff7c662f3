{"ast":null,"code":"import _classCallCheck from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeAndPushVC } from \"../store\";\nimport isMobile from \"../helpers/isMobile\";\n\nvar IssueBenefitButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueBenefitButton, _React$Component);\n\n  var _super = _createSuper(IssueBenefitButton);\n\n  function IssueBenefitButton(props) {\n    var _this;\n\n    _classCallCheck(this, IssueBenefitButton);\n\n    _this = _super.call(this, props);\n    _this.dispatch = props.dispatch;\n    _this.session = props.session;\n    _this.hasRequiredAttributes = props.hasRequiredAttributes;\n    _this.vcIssuanceEndpoint = props.vcIssuanceEndpoint;\n    _this.vcType = props.vcType;\n    _this.click = _this.click.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IssueBenefitButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"click\",\n    value: function click() {\n      var vcType = this.props.vcType;\n      console.log(\"IssueBenefitButton:: click called with session id \" + this.props.uuid);\n      var url = this.props.baseUrl ? \"\".concat(this.props.baseUrl, \"benefit/issue?caseId=\").concat(this.props.caseId) : \"/benefit/issue?caseId=\".concat(this.props.caseId); // console.log(\n      //   `will send request for ${url} with ${this.props.userSelection}, ty[e ${vcType} isMobile ${isMobile()}`\n      // );\n\n      this.props.sendVC(\"\".concat(url), this.props.userSelection, vcType, this.props.uuid, isMobile(), this.props.caseId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Button, {\n        variant: \"primary\",\n        disabled: !this.props.hasRequiredAttributes,\n        onClick: this.click\n      }, \"\\u0388\\u03BA\\u03B4\\u03BF\\u03C3\\u03B7 \\u03A4\\u03B1\\u03C5\\u03C4\\u03CC\\u03C4\\u03B7\\u03C4\\u03B1\\u03C2\") // </Link>\n      ;\n    }\n  }]);\n\n  return IssueBenefitButton;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    status: state.sessionStatus\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    sendVC: function sendVC(url, userSelection, vcType, uuid, isMobile, caseId) {\n      dispatch(makeAndPushVC(url, userSelection, vcType, uuid, isMobile, caseId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueBenefitButton);","map":null,"metadata":{},"sourceType":"module"}