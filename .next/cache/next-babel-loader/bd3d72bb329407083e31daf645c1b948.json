{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nconst makeInputElement = (theName, text, helpText) => {\n  return __jsx(\"div\", {\n    className: \"form-group row\"\n  }, __jsx(\"label\", {\n    htmlFor: theName,\n    className: \"col-sm-2 col-form-label\"\n  }, text), __jsx(\"div\", {\n    className: \"col-sm-10\"\n  }, __jsx(Field, {\n    name: theName,\n    component: \"input\",\n    type: \"text\",\n    className: \"form-control\"\n  })));\n};\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => __jsx(\"div\", null, __jsx(FormControlLabel, {\n  label: label,\n  control: __jsx(Checkbox, {\n    checked: input.value ? true : false,\n    onChange: input.onChange\n  })\n}));\n\nconst radioButton = (_ref) => {\n  let {\n    input\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"input\"]);\n\n  return __jsx(FormControl, null, __jsx(RadioGroup, _extends({}, input, rest), __jsx(FormControlLabel, {\n    value: \"hospitalized\",\n    control: __jsx(Radio, null),\n    label: \"Resident at health care institution\"\n  }), __jsx(FormControlLabel, {\n    value: \"hospitalizedSpecific\",\n    control: __jsx(Radio, null),\n    label: \"Resident at mental health care institution\"\n  }), __jsx(FormControlLabel, {\n    value: \"monk\",\n    control: __jsx(Radio, null),\n    label: \"Resident at a monastery\"\n  }), __jsx(FormControlLabel, {\n    value: \"luxury\",\n    control: __jsx(Radio, null),\n    label: \"Airplane, yacht owner\"\n  }), __jsx(FormControlLabel, {\n    value: \"none\",\n    control: __jsx(Radio, null),\n    label: \"None of the above\"\n  })));\n};\n\nlet SelfForm = props => {\n  const {\n    handleSubmit\n  } = props;\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: \"5rem\",\n      marginBottom: \"5rem\"\n    }\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h4\", {\n    className: \"row\"\n  }, \"Employment Details\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(Field, {\n    name: \"employed\",\n    component: renderCheckbox,\n    label: \"Employed\"\n  })), makeInputElement(\"oaedid\", \"Public Employment Service identification number\"), makeInputElement(\"oaedDate\", \"Public Employment Service  date of registration\"), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(Field, {\n    name: \"participateFead\",\n    component: renderCheckbox,\n    label: \"Participate in the FEAD program\"\n  })), makeInputElement(\"feadProvider\", \"FEAD provider\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h4\", {\n    className: \"row\"\n  }, \"Personal Details\"), __jsx(Field, {\n    name: \"personal\",\n    component: radioButton\n  }, __jsx(Radio, {\n    value: \"hospitalized\",\n    label: \"Resident at health care institution\"\n  }), __jsx(Radio, {\n    value: \"hospitalizedSpecific\",\n    label: \"Resident at mental health care institution\"\n  }), __jsx(Radio, {\n    value: \"monk\",\n    label: \"Resident at Monastery\"\n  }), __jsx(Radio, {\n    value: \"luxury\",\n    label: \"Airplane, yacht owner\"\n  }), __jsx(Radio, {\n    value: \"none\",\n    label: \"None of the above\"\n  }))), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\"\n  }, \"Submit\"));\n};\n\nSelfForm = reduxForm({\n  // a unique name for the form\n  form: \"contact\"\n})(SelfForm);\nexport default SelfForm;","map":{"version":3,"sources":["/home/ni/code/js/sbchain-issuer/components/SelForm.js"],"names":["React","Field","reduxForm","Checkbox","FormControlLabel","FormControl","Radio","RadioGroup","makeInputElement","theName","text","helpText","renderCheckbox","input","label","value","onChange","radioButton","rest","SelfForm","props","handleSubmit","marginTop","marginBottom","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nconst makeInputElement = (theName, text, helpText) => {\n  return (\n    <div className=\"form-group row\">\n      <label htmlFor={theName} className=\"col-sm-2 col-form-label\">\n        {text}\n      </label>\n      <div className=\"col-sm-10\">\n        <Field\n          name={theName}\n          component=\"input\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n      </div>\n    </div>\n  );\n};\n\nconst renderCheckbox = ({ input, label }) => (\n  <div > \n    <FormControlLabel\n      label={label}\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}\n        />\n      }\n    />\n  </div>\n);\n\nconst radioButton = ({ input, ...rest }) => (\n  <FormControl>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel\n        value=\"hospitalized\"\n        control={<Radio />}\n        label=\"Resident at health care institution\"\n      />\n      <FormControlLabel\n        value=\"hospitalizedSpecific\"\n        control={<Radio />}\n        label=\"Resident at mental health care institution\"\n      />\n      <FormControlLabel\n        value=\"monk\"\n        control={<Radio />}\n        label=\"Resident at a monastery\"\n      />\n      <FormControlLabel\n        value=\"luxury\"\n        control={<Radio />}\n        label=\"Airplane, yacht owner\"\n      />\n       <FormControlLabel\n        value=\"none\"\n        control={<Radio />}\n        label=\"None of the above\"\n      />\n    </RadioGroup>\n  </FormControl>\n);\n\nlet SelfForm = (props) => {\n  const { handleSubmit } = props;\n  return (\n    <form\n      onSubmit={handleSubmit}\n      style={{ marginTop: \"5rem\", marginBottom: \"5rem\" }}\n    >\n      <div className=\"container\">\n        <h4 className=\"row\">\n          Employment Details\n        </h4>\n\n        <div className=\"row\">\n          <Field name=\"employed\" component={renderCheckbox} label=\"Employed\" />\n        </div>\n        {makeInputElement(\n          \"oaedid\",\n          \"Public Employment Service identification number\"\n        )}\n        {makeInputElement(\n          \"oaedDate\",\n          \"Public Employment Service  date of registration\"\n        )}\n\n        <div className=\"row\">\n          <Field name=\"participateFead\" component={renderCheckbox} label=\"Participate in the FEAD program\" />\n        </div>\n        \n        {makeInputElement(\n          \"feadProvider\",\n          \"FEAD provider\"\n        )}\n\n\n      </div>\n\n\n      <div className=\"container\">\n        <h4 className=\"row\">\n          Personal Details\n        </h4>\n        <Field name=\"personal\" component={radioButton}>\n          <Radio\n            value=\"hospitalized\"\n            label=\"Resident at health care institution\"\n          />\n          <Radio\n            value=\"hospitalizedSpecific\"\n            label=\"Resident at mental health care institution\"\n          />\n          <Radio value=\"monk\" label=\"Resident at Monastery\" />\n          <Radio value=\"luxury\" label=\"Airplane, yacht owner\" />\n          <Radio value=\"none\" label=\"None of the above\" />\n        </Field>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nSelfForm = reduxForm({\n  // a unique name for the form\n  form: \"contact\",\n})(SelfForm);\n\nexport default SelfForm;\n"]},"metadata":{},"sourceType":"module"}