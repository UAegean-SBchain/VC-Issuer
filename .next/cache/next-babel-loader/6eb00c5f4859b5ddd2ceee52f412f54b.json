{"ast":null,"code":"import _regeneratorRuntime from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/ni/code/js/sbchain-issuer/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { setSessionData, makeOnlyConnectionRequest, addSetToSelection, setStepperSteps, setEndpoint, setBaseUrl // setServerSessionId,\n, completeDIDAuth, makeSealSession, makeSessionWithDIDConnecetionRequest, setSealSession, setEidasUriPort, setEidasRedirectUri } from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport EndorseBillForm from \"../../../components/endorseBillForm\";\nimport ConnectMobile from \"../../../components/ConnectMobile\";\n\nvar transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\n\nvar IssueEbill = /*#__PURE__*/function (_React$Component) {\n  _inherits(IssueEbill, _React$Component);\n\n  var _super = _createSuper(IssueEbill);\n\n  function IssueEbill(props) {\n    var _this;\n\n    _classCallCheck(this, IssueEbill);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (values) {\n      console.log(values);\n      values.source = \"ebill\";\n      values.address = {\n        'street': values.street,\n        'number': values.number,\n        'municipality': values.municipality,\n        'po': values.po\n      };\n      var toSelect = [values];\n\n      _this.props.setSefToSelection(toSelect);\n\n      axios.post(\"../../endorse/ebill/store\", {\n        session: _this.props.sealSession,\n        details: values\n      }).then(function (data) {\n        console.log(\"updated backend with selection\");\n        console.log(data);\n\n        _this.props.setEBillToSession({\n          ebill: values\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    });\n\n    _this.dispatch = props.dispatch;\n    _this.isFetching = props.isFetching;\n    _this.sessionData = props.sessionData;\n    _this.hasRequiredAttributes = props.sessionData !== null && props.sessionData !== undefined && props.sessionData.ebill !== undefined;\n    return _this;\n  }\n\n  _createClass(IssueEbill, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.DID) {\n        //if DID auth has not been completed\n        if (!this.props.sealSession) {\n          this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n        } else {\n          this.props.makeConnectionRequest(this.props.sealSession, this.props.baseUrl, isMobile());\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n      var stepperSteps = [{\n        title: \"Συνδέστε το κινητό σας\"\n      }, {\n        title: 'Συμπληρώστε τα πεδία'\n      } // { title: \"Request Endorsement\" },\n      ];\n\n      if (this.props.qrData && isMobile() && !this.props.DID) {\n        return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n          steps: stepperSteps,\n          activeNum: stepNumber\n        }))), __jsx(ConnectMobile, {\n          baseUrl: this.props.baseUrl,\n          qrData: this.props.qrData,\n          DID: this.props.DID,\n          uuid: this.props.uuid,\n          serverSessionId: this.props.uuid,\n          sealSession: this.props.uuid\n        }));\n      }\n\n      var issueVCBut = __jsx(IssueVCButton, {\n        hasRequiredAttributes: this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.ebill !== undefined,\n        baseUrl: this.props.baseUrl,\n        userSelection: this.props.userSelection,\n        uuid: this.props.sealSession,\n        vcType: \"EBILL\"\n      });\n\n      var selfCard = __jsx(Card, {\n        className: \"text-center\",\n        style: {\n          marginTop: \"2rem\"\n        }\n      }, __jsx(Card.Header, null, \"Issue a Verifiable Credential containing self attested attributes\"), __jsx(Card.Body, null, __jsx(Card.Title, null, this.hasRequiredAttributes ? \"Credentials Issuance is ready!\" : \"Please authenticate to the required data sources\"), __jsx(Card.Text, null, \"\\u039F\\u03BB\\u03BF\\u03BA\\u03BB\\u03B7\\u03C1\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5 \\u03C4\\u03B7\\u03BD \\u03B1\\u03AF\\u03C4\\u03B7\\u03C3\\u03B7 \\u03B5\\u03C0\\u03B9\\u03B2\\u03B1\\u03B9\\u03B2\\u03AD\\u03C9\\u03C3\\u03B7\\u03C2 \\u03C4\\u03C9\\u03BD \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03C9\\u03BD \\u03C0\\u03BF\\u03C5 \\u03B4\\u03B7\\u03BB\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5. \\u039C\\u03CC\\u03BB\\u03B9\\u03C2, \\u03C4\\u03B1 \\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03B5\\u03AF\\u03B1 \\u03B5\\u03C0\\u03B9\\u03B2\\u03B5\\u03B2\\u03B1\\u03B9\\u03C9\\u03B8\\u03BF\\u03CD\\u03BD \\u03B1\\u03C0\\u03CC \\u03C4\\u03BF\\u03BD \\u03B1\\u03C1\\u03BC\\u03CC\\u03B4\\u03B9\\u03BF \\u03C6\\u03BF\\u03C1\\u03AD\\u03B1, \\u03CC\\u03C0\\u03C9\\u03C2 \\u03B5\\u03C3\\u03B5\\u03AF\\u03C2 \\u03C4\\u03BF\\u03BD \\u03B4\\u03B7\\u03BB\\u03CE\\u03C3\\u03B1\\u03C4\\u03B5, \\u03C4\\u03BF \\u03B1\\u03BD\\u03C4\\u03AF\\u03C3\\u03C4\\u03BF\\u03B9\\u03C7\\u03BF \\u03C0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03C4\\u03B9\\u03BA\\u03CC (Verifiable Credential) \\u03B8\\u03B1 \\u03C3\\u03C4\\u03B1\\u03BB\\u03B5\\u03AF \\u03C3\\u03C4\\u03BF \\u03BA\\u03B9\\u03BD\\u03B7\\u03C4\\u03CC \\u03C3\\u03B1\\u03C2.\"), __jsx(Container, null)));\n\n      var result = __jsx(PairOrCard, {\n        qrData: this.props.qrData,\n        DID: this.props.DID,\n        baseUrl: this.props.baseUrl,\n        uuid: this.props.uuid,\n        serverSessionId: this.props.sealSession,\n        card: selfCard,\n        vcSent: this.props.vcSent,\n        sealSession: this.props.sealSession,\n        formDataUploaded: this.props.sessionData !== null && this.props.sessionData !== undefined && this.props.sessionData.ebill !== undefined,\n        selfForm: __jsx(EndorseBillForm, {\n          onSubmit: this.submit\n        })\n      });\n\n      return __jsx(Layout, null, __jsx(Row, null, __jsx(Col, null, __jsx(MyStepper, {\n        steps: stepperSteps,\n        activeNum: stepNumber\n      }))), result, __jsx(Row, null, __jsx(HomeButton, {\n        baseUrl: this.props.baseUrl\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, req, userSessionData, DIDOk, sealSession, baseUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore, req = _ref.req;\n\n                if (false) {\n                  userSessionData = req.session.userData;\n                  reduxStore.dispatch(setEndpoint(req.session.enpoint));\n                  baseUrl = req.session.baseUrl ? \"/\".concat(req.session.baseUrl, \"/\") : \"\";\n                  reduxStore.dispatch(setBaseUrl(baseUrl)); // reduxStore.dispatch(setServerSessionId(req.session.sealSession));\n\n                  DIDOk = req.session.DID;\n                  sealSession = req.session.sealSession;\n                  console.log(\"self.js:: in the server the seal session is:: \".concat(req.session.sealSession));\n                } else {\n                  if (reduxStore.getState().sessionData) {\n                    userSessionData = reduxStore.getState().sessionData;\n                    DIDOk = reduxStore.getState().DID; //if ther is sessionData then there should be a session as well\n\n                    sealSession = reduxStore.getState().sealSession; // serverSessionId = reduxStore.getState().serverSessionId;\n                  } else {\n                    console.log(\"no server session data found\");\n                  }\n                } //this way the userSessionData gets set in all settings\n\n\n                if (userSessionData) {\n                  reduxStore.dispatch(setSessionData(userSessionData));\n                }\n\n                if (DIDOk) {\n                  reduxStore.dispatch(completeDIDAuth(sealSession));\n                  reduxStore.dispatch(setSealSession(sealSession));\n                } //returned value here is getting mered with the mapstatetoprops\n                // mapstatetoprops overrides these values if they match\n\n\n                return _context.abrupt(\"return\", {\n                  sessionData: userSessionData,\n                  qrData: reduxStore.getState().qrData,\n                  vcSent: false,\n                  sealSession: reduxStore.getState().sealSession\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IssueEbill;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection,\n    // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setEBillToSession: function setEBillToSession(userSessionData) {\n      dispatch(setSessionData(userSessionData));\n    },\n    setSefToSelection: function setSefToSelection(set) {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: function setSteps(steps) {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: function setEndPoint(endpont) {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: function makeConnectionRequest(sealSession, baseUrl, isMobile) {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: function didAuthOK(uuid) {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: function startSealSession(baseUrl) {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: function startSessionAndDidAuth(baseUrl, isMobile) {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: function setTheSealSession(sessionId) {\n      dispatch(setSealSession(sessionId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEbill);","map":{"version":3,"sources":["/home/ni/code/js/sbchain-issuer/pages/endorse/issue/ebill.js"],"names":["React","axios","setSessionData","makeOnlyConnectionRequest","addSetToSelection","setStepperSteps","setEndpoint","setBaseUrl","completeDIDAuth","makeSealSession","makeSessionWithDIDConnecetionRequest","setSealSession","setEidasUriPort","setEidasRedirectUri","Layout","connect","Button","Row","Col","Card","Container","MyStepper","HomeButton","IssueVCButton","PairOrCard","isMobile","EndorseBillForm","ConnectMobile","transport","require","IssueEbill","props","values","console","log","source","address","street","number","municipality","po","toSelect","setSefToSelection","post","session","sealSession","details","then","data","setEBillToSession","ebill","error","dispatch","isFetching","sessionData","hasRequiredAttributes","undefined","DID","startSessionAndDidAuth","baseUrl","makeConnectionRequest","stepNumber","stepperSteps","title","qrData","uuid","issueVCBut","userSelection","selfCard","marginTop","result","vcSent","submit","reduxStore","req","userSessionData","userData","enpoint","DIDOk","getState","Component","mapStateToProps","state","appReducer","fetching","eidasUri","eidasPort","endpoint","eidasRedirectUri","mapDispatchToProps","set","setSteps","steps","setEndPoint","endpont","didAuthOK","startSealSession","setTheSealSession","sessionId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nimport {\n  setSessionData,\n  makeOnlyConnectionRequest,\n  addSetToSelection,\n  setStepperSteps,\n  setEndpoint,\n  setBaseUrl,\n  // setServerSessionId,\n  completeDIDAuth,\n  makeSealSession,\n  makeSessionWithDIDConnecetionRequest,\n  setSealSession,\n  setEidasUriPort,\n  setEidasRedirectUri,\n} from \"../../../store\";\nimport Layout from \"../../../components/Layout\";\nimport { connect } from \"react-redux\";\nimport { Button, Row, Col, Card, Container } from \"react-bootstrap\";\nimport MyStepper from \"../../../components/Stepper\";\nimport HomeButton from \"../../../components/HomeButton\";\nimport IssueVCButton from \"../../../components/IssueVCButton\";\nimport PairOrCard from \"../../../components/PairOrCard\";\nimport isMobile from \"../../../helpers/isMobile\";\nimport EndorseBillForm from \"../../../components/endorseBillForm\";\nimport ConnectMobile from \"../../../components/ConnectMobile\"\n\nconst transport = require(\"uport-transports\").transport;\n/*\n  Secure flow:\n  - check in session if DID is present. This is not only the DID of the user but the whole connection response\n  - if it is not present:\n    - first display DID connection request (QR etc.). The DID response endpoint should contain the session here\n    - on response on the server, send a SSE to the front end, denoting that DID auth is completed and on the server there is the DID component\n    - Display additional datasources\n    - on VC issance request, do not display QR code etc, but send the credentials straigth to the users wallet\n\n*/\n\nclass IssueEbill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = props.dispatch;\n    this.isFetching = props.isFetching;\n    this.sessionData = props.sessionData;\n    this.hasRequiredAttributes =\n      props.sessionData !== null &&\n      props.sessionData !== undefined &&\n      props.sessionData.ebill !== undefined;\n  }\n\n  static async getInitialProps({ reduxStore, req }) {\n    let userSessionData;\n    let DIDOk;\n    let sealSession;\n    if (typeof window === \"undefined\") {\n      userSessionData = req.session.userData;\n      reduxStore.dispatch(setEndpoint(req.session.enpoint));\n      let baseUrl = req.session.baseUrl ? `/${req.session.baseUrl}/` : \"\";\n      reduxStore.dispatch(setBaseUrl(baseUrl));\n      // reduxStore.dispatch(setServerSessionId(req.session.sealSession));\n      DIDOk = req.session.DID;\n      sealSession = req.session.sealSession;\n      console.log(\n        `self.js:: in the server the seal session is:: ${req.session.sealSession}`\n      );\n    } else {\n      if (reduxStore.getState().sessionData) {\n        userSessionData = reduxStore.getState().sessionData;\n        DIDOk = reduxStore.getState().DID;\n        //if ther is sessionData then there should be a session as well\n        sealSession = reduxStore.getState().sealSession;\n        // serverSessionId = reduxStore.getState().serverSessionId;\n      } else {\n        console.log(`no server session data found`);\n      }\n    }\n\n    //this way the userSessionData gets set in all settings\n    if (userSessionData) {\n      reduxStore.dispatch(setSessionData(userSessionData));\n    }\n    if (DIDOk) {\n      reduxStore.dispatch(completeDIDAuth(sealSession));\n      reduxStore.dispatch(setSealSession(sealSession));\n    }\n\n    //returned value here is getting mered with the mapstatetoprops\n    // mapstatetoprops overrides these values if they match\n    return {\n      sessionData: userSessionData,\n      qrData: reduxStore.getState().qrData,\n      vcSent: false,\n      sealSession: reduxStore.getState().sealSession,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.DID) {\n      //if DID auth has not been completed\n      if (!this.props.sealSession) {\n        this.props.startSessionAndDidAuth(this.props.baseUrl, isMobile()); //and then makeConnectionRequest\n      } else {\n        this.props.makeConnectionRequest(\n          this.props.sealSession,\n          this.props.baseUrl,\n          isMobile()\n        );\n      }\n    }\n  }\n\n \n  submit = (values) => {\n   \n    console.log(values);\n    values.source = \"ebill\";\n    values.address = {\n      'street': values.street,\n      'number': values.number,\n      'municipality': values.municipality,\n      'po':values.po \n    }\n\n    let toSelect = [values];\n    this.props.setSefToSelection(toSelect);\n    axios\n      .post(\"../../endorse/ebill/store\", {\n        session: this.props.sealSession,\n        details: values,\n      })\n      .then((data) => {\n        console.log(\"updated backend with selection\");\n        console.log(data)\n        this.props.setEBillToSession({ ebill: values });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n\n    let stepNumber = !this.props.DID ? 0 : this.hasRequiredAttributes ? 2 : 1;\n    let stepperSteps = [\n      { title: \"Συνδέστε το κινητό σας\" },\n      { title: 'Συμπληρώστε τα πεδία' },\n      // { title: \"Request Endorsement\" },\n    ];\n\n\n\n    if (this.props.qrData && isMobile() && !this.props.DID) {\n      return (\n        <Layout>\n          <Row>\n            <Col>\n              <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n            </Col>\n          </Row>\n          <ConnectMobile\n            baseUrl={this.props.baseUrl}\n            qrData={this.props.qrData}\n            DID={this.props.DID}\n            uuid={this.props.uuid}\n            serverSessionId={this.props.uuid}\n            sealSession={this.props.uuid}\n          />\n        </Layout>\n      );\n    }\n\n    let issueVCBut = (\n      <IssueVCButton\n        hasRequiredAttributes={\n          this.props.sessionData !== null &&\n          this.props.sessionData !== undefined &&\n          this.props.sessionData.ebill !== undefined\n        }\n        baseUrl={this.props.baseUrl}\n        userSelection={this.props.userSelection}\n        uuid={this.props.sealSession}\n        vcType={\"EBILL\"}\n      />\n    );\n\n    let selfCard = (\n      <Card className=\"text-center\" style={{ marginTop: \"2rem\" }}>\n        <Card.Header>\n          Issue a Verifiable Credential containing self attested attributes\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>\n            {this.hasRequiredAttributes\n              ? \"Credentials Issuance is ready!\"\n              : \"Please authenticate to the required data sources\"}\n          </Card.Title>\n          <Card.Text>\n            Ολοκληρώσατε την αίτηση επιβαιβέωσης των στοιχείων που δηλώσατε. Μόλις, τα στοιχεία επιβεβαιωθούν από τον αρμόδιο φορέα, \n            όπως εσείς τον δηλώσατε, το αντίστοιχο πιστοποιητικό (Verifiable Credential) θα σταλεί στο κινητό σας. \n          </Card.Text>\n          <Container>\n            {/* <Row>\n              <Col>{issueVCBut}</Col>\n            </Row> */}\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n\n\n    let result = (\n      <PairOrCard\n        qrData={this.props.qrData}\n        DID={this.props.DID}\n        baseUrl={this.props.baseUrl}\n        uuid={this.props.uuid}\n        serverSessionId={this.props.sealSession}\n        card={selfCard}\n        vcSent={this.props.vcSent}\n        sealSession={this.props.sealSession}\n        formDataUploaded={\n          this.props.sessionData !== null &&\n          this.props.sessionData !== undefined &&\n          this.props.sessionData.ebill !== undefined\n        }\n        selfForm={<EndorseBillForm onSubmit={this.submit} />}\n      />\n    );\n\n    return (\n      <Layout>\n        <Row>\n          <Col>\n            <MyStepper steps={stepperSteps} activeNum={stepNumber} />\n          </Col>\n        </Row>\n        {result}\n\n        <Row>\n          <HomeButton baseUrl={this.props.baseUrl} />\n        </Row>\n      </Layout>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.appReducer.fetching,\n    qrData: state.appReducer.qrData,\n    sessionData: state.appReducer.sessionData,\n    userSelection: state.appReducer.userSelection, // the attributes selected by the user to be included in a VC,\n    baseUrl: state.appReducer.baseUrl,\n    DID: state.appReducer.DID,\n    // serverSessionId: state.serverSessionId,\n    uuid: state.appReducer.uuid,\n    vcSent: state.appReducer.vcSent,\n    sealSession: state.appReducer.sealSession,\n    eidasUri: state.appReducer.eidasUri,\n    eidasPort: state.appReducer.eidasPort,\n    endpoint: state.appReducer.endpoint,\n    eidasRedirectUri: state.appReducer.eidasRedirectUri,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setEBillToSession: (userSessionData) => {\n      dispatch(setSessionData(userSessionData));\n    },\n    setSefToSelection: (set) => {\n      dispatch(addSetToSelection(set));\n    },\n    setSteps: (steps) => {\n      dispatch(setStepperSteps(steps));\n    },\n    setEndPoint: (endpont) => {\n      dispatch(setEndpoint(endpoint));\n    },\n    makeConnectionRequest: (sealSession, baseUrl, isMobile) => {\n      dispatch(makeOnlyConnectionRequest(sealSession, baseUrl, isMobile));\n    },\n    didAuthOK: (uuid) => {\n      dispatch(completeDIDAuth(uuid));\n    },\n    startSealSession: (baseUrl) => {\n      dispatch(makeSealSession(baseUrl));\n    },\n    startSessionAndDidAuth: (baseUrl, isMobile) => {\n      dispatch(makeSessionWithDIDConnecetionRequest(baseUrl, isMobile));\n    },\n    setTheSealSession: (sessionId) => {\n      dispatch(setSealSession(sessionId));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IssueEbill);\n"]},"metadata":{},"sourceType":"module"}